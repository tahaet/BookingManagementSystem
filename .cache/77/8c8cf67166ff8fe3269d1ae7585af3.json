{"id":"../../../node_modules/stripe/cjs/RequestSender.js","dependencies":[{"name":"G:\\Nodejs\\complete-node-bootcamp\\4-natours\\starter\\package.json","includedInParent":true,"mtime":1732454386584},{"name":"G:\\Nodejs\\complete-node-bootcamp\\4-natours\\starter\\node_modules\\stripe\\cjs\\package.json","includedInParent":true,"mtime":1732454377199},{"name":"./Error.js","loc":{"line":4,"column":27,"index":136},"parent":"G:\\Nodejs\\complete-node-bootcamp\\4-natours\\starter\\node_modules\\stripe\\cjs\\RequestSender.js","resolved":"G:\\Nodejs\\complete-node-bootcamp\\4-natours\\starter\\node_modules\\stripe\\cjs\\Error.js"},{"name":"./net/HttpClient.js","loc":{"line":5,"column":32,"index":183},"parent":"G:\\Nodejs\\complete-node-bootcamp\\4-natours\\starter\\node_modules\\stripe\\cjs\\RequestSender.js","resolved":"G:\\Nodejs\\complete-node-bootcamp\\4-natours\\starter\\node_modules\\stripe\\cjs\\net\\HttpClient.js"},{"name":"./utils.js","loc":{"line":6,"column":27,"index":234},"parent":"G:\\Nodejs\\complete-node-bootcamp\\4-natours\\starter\\node_modules\\stripe\\cjs\\RequestSender.js","resolved":"G:\\Nodejs\\complete-node-bootcamp\\4-natours\\starter\\node_modules\\stripe\\cjs\\utils.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestSender = void 0;\nconst Error_js_1 = require(\"./Error.js\");\nconst HttpClient_js_1 = require(\"./net/HttpClient.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst MAX_RETRY_AFTER_WAIT = 60;\nclass RequestSender {\n    constructor(stripe, maxBufferedRequestMetric) {\n        this._stripe = stripe;\n        this._maxBufferedRequestMetric = maxBufferedRequestMetric;\n    }\n    _addHeadersDirectlyToObject(obj, headers) {\n        // For convenience, make some headers easily accessible on\n        // lastResponse.\n        // NOTE: Stripe responds with lowercase header names/keys.\n        obj.requestId = headers['request-id'];\n        obj.stripeAccount = obj.stripeAccount || headers['stripe-account'];\n        obj.apiVersion = obj.apiVersion || headers['stripe-version'];\n        obj.idempotencyKey = obj.idempotencyKey || headers['idempotency-key'];\n    }\n    _makeResponseEvent(requestEvent, statusCode, headers) {\n        const requestEndTime = Date.now();\n        const requestDurationMs = requestEndTime - requestEvent.request_start_time;\n        return (0, utils_js_1.removeNullish)({\n            api_version: headers['stripe-version'],\n            account: headers['stripe-account'],\n            idempotency_key: headers['idempotency-key'],\n            method: requestEvent.method,\n            path: requestEvent.path,\n            status: statusCode,\n            request_id: this._getRequestId(headers),\n            elapsed: requestDurationMs,\n            request_start_time: requestEvent.request_start_time,\n            request_end_time: requestEndTime,\n        });\n    }\n    _getRequestId(headers) {\n        return headers['request-id'];\n    }\n    /**\n     * Used by methods with spec.streaming === true. For these methods, we do not\n     * buffer successful responses into memory or do parse them into stripe\n     * objects, we delegate that all of that to the user and pass back the raw\n     * http.Response object to the callback.\n     *\n     * (Unsuccessful responses shouldn't make it here, they should\n     * still be buffered/parsed and handled by _jsonResponseHandler -- see\n     * makeRequest)\n     */\n    _streamingResponseHandler(requestEvent, usage, callback) {\n        return (res) => {\n            const headers = res.getHeaders();\n            const streamCompleteCallback = () => {\n                const responseEvent = this._makeResponseEvent(requestEvent, res.getStatusCode(), headers);\n                this._stripe._emitter.emit('response', responseEvent);\n                this._recordRequestMetrics(this._getRequestId(headers), responseEvent.elapsed, usage);\n            };\n            const stream = res.toStream(streamCompleteCallback);\n            // This is here for backwards compatibility, as the stream is a raw\n            // HTTP response in Node and the legacy behavior was to mutate this\n            // response.\n            this._addHeadersDirectlyToObject(stream, headers);\n            return callback(null, stream);\n        };\n    }\n    /**\n     * Default handler for Stripe responses. Buffers the response into memory,\n     * parses the JSON and returns it (i.e. passes it to the callback) if there\n     * is no \"error\" field. Otherwise constructs/passes an appropriate Error.\n     */\n    _jsonResponseHandler(requestEvent, apiMode, usage, callback) {\n        return (res) => {\n            const headers = res.getHeaders();\n            const requestId = this._getRequestId(headers);\n            const statusCode = res.getStatusCode();\n            const responseEvent = this._makeResponseEvent(requestEvent, statusCode, headers);\n            this._stripe._emitter.emit('response', responseEvent);\n            res\n                .toJSON()\n                .then((jsonResponse) => {\n                if (jsonResponse.error) {\n                    let err;\n                    // Convert OAuth error responses into a standard format\n                    // so that the rest of the error logic can be shared\n                    if (typeof jsonResponse.error === 'string') {\n                        jsonResponse.error = {\n                            type: jsonResponse.error,\n                            message: jsonResponse.error_description,\n                        };\n                    }\n                    jsonResponse.error.headers = headers;\n                    jsonResponse.error.statusCode = statusCode;\n                    jsonResponse.error.requestId = requestId;\n                    if (statusCode === 401) {\n                        err = new Error_js_1.StripeAuthenticationError(jsonResponse.error);\n                    }\n                    else if (statusCode === 403) {\n                        err = new Error_js_1.StripePermissionError(jsonResponse.error);\n                    }\n                    else if (statusCode === 429) {\n                        err = new Error_js_1.StripeRateLimitError(jsonResponse.error);\n                    }\n                    else if (apiMode === 'v2') {\n                        err = (0, Error_js_1.generateV2Error)(jsonResponse.error);\n                    }\n                    else {\n                        err = (0, Error_js_1.generateV1Error)(jsonResponse.error);\n                    }\n                    throw err;\n                }\n                return jsonResponse;\n            }, (e) => {\n                throw new Error_js_1.StripeAPIError({\n                    message: 'Invalid JSON received from the Stripe API',\n                    exception: e,\n                    requestId: headers['request-id'],\n                });\n            })\n                .then((jsonResponse) => {\n                this._recordRequestMetrics(requestId, responseEvent.elapsed, usage);\n                // Expose raw response object.\n                const rawResponse = res.getRawResponse();\n                this._addHeadersDirectlyToObject(rawResponse, headers);\n                Object.defineProperty(jsonResponse, 'lastResponse', {\n                    enumerable: false,\n                    writable: false,\n                    value: rawResponse,\n                });\n                callback(null, jsonResponse);\n            }, (e) => callback(e, null));\n        };\n    }\n    static _generateConnectionErrorMessage(requestRetries) {\n        return `An error occurred with our connection to Stripe.${requestRetries > 0 ? ` Request was retried ${requestRetries} times.` : ''}`;\n    }\n    // For more on when and how to retry API requests, see https://stripe.com/docs/error-handling#safely-retrying-requests-with-idempotency\n    static _shouldRetry(res, numRetries, maxRetries, error) {\n        if (error &&\n            numRetries === 0 &&\n            HttpClient_js_1.HttpClient.CONNECTION_CLOSED_ERROR_CODES.includes(error.code)) {\n            return true;\n        }\n        // Do not retry if we are out of retries.\n        if (numRetries >= maxRetries) {\n            return false;\n        }\n        // Retry on connection error.\n        if (!res) {\n            return true;\n        }\n        // The API may ask us not to retry (e.g., if doing so would be a no-op)\n        // or advise us to retry (e.g., in cases of lock timeouts); we defer to that.\n        if (res.getHeaders()['stripe-should-retry'] === 'false') {\n            return false;\n        }\n        if (res.getHeaders()['stripe-should-retry'] === 'true') {\n            return true;\n        }\n        // Retry on conflict errors.\n        if (res.getStatusCode() === 409) {\n            return true;\n        }\n        // Retry on 500, 503, and other internal errors.\n        //\n        // Note that we expect the stripe-should-retry header to be false\n        // in most cases when a 500 is returned, since our idempotency framework\n        // would typically replay it anyway.\n        if (res.getStatusCode() >= 500) {\n            return true;\n        }\n        return false;\n    }\n    _getSleepTimeInMS(numRetries, retryAfter = null) {\n        const initialNetworkRetryDelay = this._stripe.getInitialNetworkRetryDelay();\n        const maxNetworkRetryDelay = this._stripe.getMaxNetworkRetryDelay();\n        // Apply exponential backoff with initialNetworkRetryDelay on the\n        // number of numRetries so far as inputs. Do not allow the number to exceed\n        // maxNetworkRetryDelay.\n        let sleepSeconds = Math.min(initialNetworkRetryDelay * Math.pow(2, numRetries - 1), maxNetworkRetryDelay);\n        // Apply some jitter by randomizing the value in the range of\n        // (sleepSeconds / 2) to (sleepSeconds).\n        sleepSeconds *= 0.5 * (1 + Math.random());\n        // But never sleep less than the base sleep seconds.\n        sleepSeconds = Math.max(initialNetworkRetryDelay, sleepSeconds);\n        // And never sleep less than the time the API asks us to wait, assuming it's a reasonable ask.\n        if (Number.isInteger(retryAfter) && retryAfter <= MAX_RETRY_AFTER_WAIT) {\n            sleepSeconds = Math.max(sleepSeconds, retryAfter);\n        }\n        return sleepSeconds * 1000;\n    }\n    // Max retries can be set on a per request basis. Favor those over the global setting\n    _getMaxNetworkRetries(settings = {}) {\n        return settings.maxNetworkRetries !== undefined &&\n            Number.isInteger(settings.maxNetworkRetries)\n            ? settings.maxNetworkRetries\n            : this._stripe.getMaxNetworkRetries();\n    }\n    _defaultIdempotencyKey(method, settings, apiMode) {\n        // If this is a POST and we allow multiple retries, ensure an idempotency key.\n        const maxRetries = this._getMaxNetworkRetries(settings);\n        const genKey = () => `stripe-node-retry-${this._stripe._platformFunctions.uuid4()}`;\n        // more verbose than it needs to be, but gives clear separation between V1 and V2 behavior\n        if (apiMode === 'v2') {\n            if (method === 'POST' || method === 'DELETE') {\n                return genKey();\n            }\n        }\n        else if (apiMode === 'v1') {\n            if (method === 'POST' && maxRetries > 0) {\n                return genKey();\n            }\n        }\n        return null;\n    }\n    _makeHeaders({ contentType, contentLength, apiVersion, clientUserAgent, method, userSuppliedHeaders, userSuppliedSettings, stripeAccount, stripeContext, apiMode, }) {\n        const defaultHeaders = {\n            Accept: 'application/json',\n            'Content-Type': contentType,\n            'User-Agent': this._getUserAgentString(apiMode),\n            'X-Stripe-Client-User-Agent': clientUserAgent,\n            'X-Stripe-Client-Telemetry': this._getTelemetryHeader(),\n            'Stripe-Version': apiVersion,\n            'Stripe-Account': stripeAccount,\n            'Stripe-Context': stripeContext,\n            'Idempotency-Key': this._defaultIdempotencyKey(method, userSuppliedSettings, apiMode),\n        };\n        // As per https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2:\n        //   A user agent SHOULD send a Content-Length in a request message when\n        //   no Transfer-Encoding is sent and the request method defines a meaning\n        //   for an enclosed payload body.  For example, a Content-Length header\n        //   field is normally sent in a POST request even when the value is 0\n        //   (indicating an empty payload body).  A user agent SHOULD NOT send a\n        //   Content-Length header field when the request message does not contain\n        //   a payload body and the method semantics do not anticipate such a\n        //   body.\n        //\n        // These method types are expected to have bodies and so we should always\n        // include a Content-Length.\n        const methodHasPayload = method == 'POST' || method == 'PUT' || method == 'PATCH';\n        // If a content length was specified, we always include it regardless of\n        // whether the method semantics anticipate such a body. This keeps us\n        // consistent with historical behavior. We do however want to warn on this\n        // and fix these cases as they are semantically incorrect.\n        if (methodHasPayload || contentLength) {\n            if (!methodHasPayload) {\n                (0, utils_js_1.emitWarning)(`${method} method had non-zero contentLength but no payload is expected for this verb`);\n            }\n            defaultHeaders['Content-Length'] = contentLength;\n        }\n        return Object.assign((0, utils_js_1.removeNullish)(defaultHeaders), \n        // If the user supplied, say 'idempotency-key', override instead of appending by ensuring caps are the same.\n        (0, utils_js_1.normalizeHeaders)(userSuppliedHeaders));\n    }\n    _getUserAgentString(apiMode) {\n        const packageVersion = this._stripe.getConstant('PACKAGE_VERSION');\n        const appInfo = this._stripe._appInfo\n            ? this._stripe.getAppInfoAsString()\n            : '';\n        return `Stripe/${apiMode} NodeBindings/${packageVersion} ${appInfo}`.trim();\n    }\n    _getTelemetryHeader() {\n        if (this._stripe.getTelemetryEnabled() &&\n            this._stripe._prevRequestMetrics.length > 0) {\n            const metrics = this._stripe._prevRequestMetrics.shift();\n            return JSON.stringify({\n                last_request_metrics: metrics,\n            });\n        }\n    }\n    _recordRequestMetrics(requestId, requestDurationMs, usage) {\n        if (this._stripe.getTelemetryEnabled() && requestId) {\n            if (this._stripe._prevRequestMetrics.length > this._maxBufferedRequestMetric) {\n                (0, utils_js_1.emitWarning)('Request metrics buffer is full, dropping telemetry message.');\n            }\n            else {\n                const m = {\n                    request_id: requestId,\n                    request_duration_ms: requestDurationMs,\n                };\n                if (usage && usage.length > 0) {\n                    m.usage = usage;\n                }\n                this._stripe._prevRequestMetrics.push(m);\n            }\n        }\n    }\n    _rawRequest(method, path, params, options) {\n        const requestPromise = new Promise((resolve, reject) => {\n            let opts;\n            try {\n                const requestMethod = method.toUpperCase();\n                if (requestMethod !== 'POST' &&\n                    params &&\n                    Object.keys(params).length !== 0) {\n                    throw new Error('rawRequest only supports params on POST requests. Please pass null and add your parameters to path.');\n                }\n                const args = [].slice.call([params, options]);\n                // Pull request data and options (headers, auth) from args.\n                const dataFromArgs = (0, utils_js_1.getDataFromArgs)(args);\n                const data = Object.assign({}, dataFromArgs);\n                const calculatedOptions = (0, utils_js_1.getOptionsFromArgs)(args);\n                const headers = calculatedOptions.headers;\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const authenticator = calculatedOptions.authenticator;\n                opts = {\n                    requestMethod,\n                    requestPath: path,\n                    bodyData: data,\n                    queryData: {},\n                    authenticator,\n                    headers,\n                    host: null,\n                    streaming: false,\n                    settings: {},\n                    usage: ['raw_request'],\n                };\n            }\n            catch (err) {\n                reject(err);\n                return;\n            }\n            function requestCallback(err, response) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(response);\n                }\n            }\n            const { headers, settings } = opts;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const authenticator = opts.authenticator;\n            this._request(opts.requestMethod, opts.host, path, opts.bodyData, authenticator, { headers, settings, streaming: opts.streaming }, opts.usage, requestCallback);\n        });\n        return requestPromise;\n    }\n    _request(method, host, path, data, authenticator, options, usage = [], callback, requestDataProcessor = null) {\n        var _a;\n        let requestData;\n        authenticator = (_a = authenticator !== null && authenticator !== void 0 ? authenticator : this._stripe._authenticator) !== null && _a !== void 0 ? _a : null;\n        const apiMode = (0, utils_js_1.getAPIMode)(path);\n        const retryRequest = (requestFn, apiVersion, headers, requestRetries, retryAfter) => {\n            return setTimeout(requestFn, this._getSleepTimeInMS(requestRetries, retryAfter), apiVersion, headers, requestRetries + 1);\n        };\n        const makeRequest = (apiVersion, headers, numRetries) => {\n            // timeout can be set on a per-request basis. Favor that over the global setting\n            const timeout = options.settings &&\n                options.settings.timeout &&\n                Number.isInteger(options.settings.timeout) &&\n                options.settings.timeout >= 0\n                ? options.settings.timeout\n                : this._stripe.getApiField('timeout');\n            const request = {\n                host: host || this._stripe.getApiField('host'),\n                port: this._stripe.getApiField('port'),\n                path: path,\n                method: method,\n                headers: Object.assign({}, headers),\n                body: requestData,\n                protocol: this._stripe.getApiField('protocol'),\n            };\n            authenticator(request)\n                .then(() => {\n                const req = this._stripe\n                    .getApiField('httpClient')\n                    .makeRequest(request.host, request.port, request.path, request.method, request.headers, request.body, request.protocol, timeout);\n                const requestStartTime = Date.now();\n                // @ts-ignore\n                const requestEvent = (0, utils_js_1.removeNullish)({\n                    api_version: apiVersion,\n                    account: headers['Stripe-Account'],\n                    idempotency_key: headers['Idempotency-Key'],\n                    method,\n                    path,\n                    request_start_time: requestStartTime,\n                });\n                const requestRetries = numRetries || 0;\n                const maxRetries = this._getMaxNetworkRetries(options.settings || {});\n                this._stripe._emitter.emit('request', requestEvent);\n                req\n                    .then((res) => {\n                    if (RequestSender._shouldRetry(res, requestRetries, maxRetries)) {\n                        return retryRequest(makeRequest, apiVersion, headers, requestRetries, \n                        // @ts-ignore\n                        res.getHeaders()['retry-after']);\n                    }\n                    else if (options.streaming && res.getStatusCode() < 400) {\n                        return this._streamingResponseHandler(requestEvent, usage, callback)(res);\n                    }\n                    else {\n                        return this._jsonResponseHandler(requestEvent, apiMode, usage, callback)(res);\n                    }\n                })\n                    .catch((error) => {\n                    if (RequestSender._shouldRetry(null, requestRetries, maxRetries, error)) {\n                        return retryRequest(makeRequest, apiVersion, headers, requestRetries, null);\n                    }\n                    else {\n                        const isTimeoutError = error.code && error.code === HttpClient_js_1.HttpClient.TIMEOUT_ERROR_CODE;\n                        return callback(new Error_js_1.StripeConnectionError({\n                            message: isTimeoutError\n                                ? `Request aborted due to timeout being reached (${timeout}ms)`\n                                : RequestSender._generateConnectionErrorMessage(requestRetries),\n                            // @ts-ignore\n                            detail: error,\n                        }));\n                    }\n                });\n            })\n                .catch((e) => {\n                throw new Error_js_1.StripeError({\n                    message: 'Unable to authenticate the request',\n                    exception: e,\n                });\n            });\n        };\n        const prepareAndMakeRequest = (error, data) => {\n            if (error) {\n                return callback(error);\n            }\n            requestData = data;\n            this._stripe.getClientUserAgent((clientUserAgent) => {\n                const apiVersion = this._stripe.getApiField('version');\n                const headers = this._makeHeaders({\n                    contentType: apiMode == 'v2'\n                        ? 'application/json'\n                        : 'application/x-www-form-urlencoded',\n                    contentLength: requestData.length,\n                    apiVersion: apiVersion,\n                    clientUserAgent,\n                    method,\n                    userSuppliedHeaders: options.headers,\n                    userSuppliedSettings: options.settings,\n                    stripeAccount: apiMode == 'v2' ? null : this._stripe.getApiField('stripeAccount'),\n                    stripeContext: apiMode == 'v2' ? this._stripe.getApiField('stripeContext') : null,\n                    apiMode: apiMode,\n                });\n                makeRequest(apiVersion, headers, 0);\n            });\n        };\n        if (requestDataProcessor) {\n            requestDataProcessor(method, data, options.headers, prepareAndMakeRequest);\n        }\n        else {\n            let stringifiedData;\n            if (apiMode == 'v2') {\n                stringifiedData = data ? (0, utils_js_1.jsonStringifyRequestData)(data) : '';\n            }\n            else {\n                stringifiedData = (0, utils_js_1.queryStringifyRequestData)(data || {}, apiMode);\n            }\n            prepareAndMakeRequest(null, stringifiedData);\n        }\n    }\n}\nexports.RequestSender = RequestSender;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../../../node_modules/stripe/cjs/RequestSender.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}}],"sources":{"../../../node_modules/stripe/cjs/RequestSender.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestSender = void 0;\nconst Error_js_1 = require(\"./Error.js\");\nconst HttpClient_js_1 = require(\"./net/HttpClient.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst MAX_RETRY_AFTER_WAIT = 60;\nclass RequestSender {\n    constructor(stripe, maxBufferedRequestMetric) {\n        this._stripe = stripe;\n        this._maxBufferedRequestMetric = maxBufferedRequestMetric;\n    }\n    _addHeadersDirectlyToObject(obj, headers) {\n        // For convenience, make some headers easily accessible on\n        // lastResponse.\n        // NOTE: Stripe responds with lowercase header names/keys.\n        obj.requestId = headers['request-id'];\n        obj.stripeAccount = obj.stripeAccount || headers['stripe-account'];\n        obj.apiVersion = obj.apiVersion || headers['stripe-version'];\n        obj.idempotencyKey = obj.idempotencyKey || headers['idempotency-key'];\n    }\n    _makeResponseEvent(requestEvent, statusCode, headers) {\n        const requestEndTime = Date.now();\n        const requestDurationMs = requestEndTime - requestEvent.request_start_time;\n        return (0, utils_js_1.removeNullish)({\n            api_version: headers['stripe-version'],\n            account: headers['stripe-account'],\n            idempotency_key: headers['idempotency-key'],\n            method: requestEvent.method,\n            path: requestEvent.path,\n            status: statusCode,\n            request_id: this._getRequestId(headers),\n            elapsed: requestDurationMs,\n            request_start_time: requestEvent.request_start_time,\n            request_end_time: requestEndTime,\n        });\n    }\n    _getRequestId(headers) {\n        return headers['request-id'];\n    }\n    /**\n     * Used by methods with spec.streaming === true. For these methods, we do not\n     * buffer successful responses into memory or do parse them into stripe\n     * objects, we delegate that all of that to the user and pass back the raw\n     * http.Response object to the callback.\n     *\n     * (Unsuccessful responses shouldn't make it here, they should\n     * still be buffered/parsed and handled by _jsonResponseHandler -- see\n     * makeRequest)\n     */\n    _streamingResponseHandler(requestEvent, usage, callback) {\n        return (res) => {\n            const headers = res.getHeaders();\n            const streamCompleteCallback = () => {\n                const responseEvent = this._makeResponseEvent(requestEvent, res.getStatusCode(), headers);\n                this._stripe._emitter.emit('response', responseEvent);\n                this._recordRequestMetrics(this._getRequestId(headers), responseEvent.elapsed, usage);\n            };\n            const stream = res.toStream(streamCompleteCallback);\n            // This is here for backwards compatibility, as the stream is a raw\n            // HTTP response in Node and the legacy behavior was to mutate this\n            // response.\n            this._addHeadersDirectlyToObject(stream, headers);\n            return callback(null, stream);\n        };\n    }\n    /**\n     * Default handler for Stripe responses. Buffers the response into memory,\n     * parses the JSON and returns it (i.e. passes it to the callback) if there\n     * is no \"error\" field. Otherwise constructs/passes an appropriate Error.\n     */\n    _jsonResponseHandler(requestEvent, apiMode, usage, callback) {\n        return (res) => {\n            const headers = res.getHeaders();\n            const requestId = this._getRequestId(headers);\n            const statusCode = res.getStatusCode();\n            const responseEvent = this._makeResponseEvent(requestEvent, statusCode, headers);\n            this._stripe._emitter.emit('response', responseEvent);\n            res\n                .toJSON()\n                .then((jsonResponse) => {\n                if (jsonResponse.error) {\n                    let err;\n                    // Convert OAuth error responses into a standard format\n                    // so that the rest of the error logic can be shared\n                    if (typeof jsonResponse.error === 'string') {\n                        jsonResponse.error = {\n                            type: jsonResponse.error,\n                            message: jsonResponse.error_description,\n                        };\n                    }\n                    jsonResponse.error.headers = headers;\n                    jsonResponse.error.statusCode = statusCode;\n                    jsonResponse.error.requestId = requestId;\n                    if (statusCode === 401) {\n                        err = new Error_js_1.StripeAuthenticationError(jsonResponse.error);\n                    }\n                    else if (statusCode === 403) {\n                        err = new Error_js_1.StripePermissionError(jsonResponse.error);\n                    }\n                    else if (statusCode === 429) {\n                        err = new Error_js_1.StripeRateLimitError(jsonResponse.error);\n                    }\n                    else if (apiMode === 'v2') {\n                        err = (0, Error_js_1.generateV2Error)(jsonResponse.error);\n                    }\n                    else {\n                        err = (0, Error_js_1.generateV1Error)(jsonResponse.error);\n                    }\n                    throw err;\n                }\n                return jsonResponse;\n            }, (e) => {\n                throw new Error_js_1.StripeAPIError({\n                    message: 'Invalid JSON received from the Stripe API',\n                    exception: e,\n                    requestId: headers['request-id'],\n                });\n            })\n                .then((jsonResponse) => {\n                this._recordRequestMetrics(requestId, responseEvent.elapsed, usage);\n                // Expose raw response object.\n                const rawResponse = res.getRawResponse();\n                this._addHeadersDirectlyToObject(rawResponse, headers);\n                Object.defineProperty(jsonResponse, 'lastResponse', {\n                    enumerable: false,\n                    writable: false,\n                    value: rawResponse,\n                });\n                callback(null, jsonResponse);\n            }, (e) => callback(e, null));\n        };\n    }\n    static _generateConnectionErrorMessage(requestRetries) {\n        return `An error occurred with our connection to Stripe.${requestRetries > 0 ? ` Request was retried ${requestRetries} times.` : ''}`;\n    }\n    // For more on when and how to retry API requests, see https://stripe.com/docs/error-handling#safely-retrying-requests-with-idempotency\n    static _shouldRetry(res, numRetries, maxRetries, error) {\n        if (error &&\n            numRetries === 0 &&\n            HttpClient_js_1.HttpClient.CONNECTION_CLOSED_ERROR_CODES.includes(error.code)) {\n            return true;\n        }\n        // Do not retry if we are out of retries.\n        if (numRetries >= maxRetries) {\n            return false;\n        }\n        // Retry on connection error.\n        if (!res) {\n            return true;\n        }\n        // The API may ask us not to retry (e.g., if doing so would be a no-op)\n        // or advise us to retry (e.g., in cases of lock timeouts); we defer to that.\n        if (res.getHeaders()['stripe-should-retry'] === 'false') {\n            return false;\n        }\n        if (res.getHeaders()['stripe-should-retry'] === 'true') {\n            return true;\n        }\n        // Retry on conflict errors.\n        if (res.getStatusCode() === 409) {\n            return true;\n        }\n        // Retry on 500, 503, and other internal errors.\n        //\n        // Note that we expect the stripe-should-retry header to be false\n        // in most cases when a 500 is returned, since our idempotency framework\n        // would typically replay it anyway.\n        if (res.getStatusCode() >= 500) {\n            return true;\n        }\n        return false;\n    }\n    _getSleepTimeInMS(numRetries, retryAfter = null) {\n        const initialNetworkRetryDelay = this._stripe.getInitialNetworkRetryDelay();\n        const maxNetworkRetryDelay = this._stripe.getMaxNetworkRetryDelay();\n        // Apply exponential backoff with initialNetworkRetryDelay on the\n        // number of numRetries so far as inputs. Do not allow the number to exceed\n        // maxNetworkRetryDelay.\n        let sleepSeconds = Math.min(initialNetworkRetryDelay * Math.pow(2, numRetries - 1), maxNetworkRetryDelay);\n        // Apply some jitter by randomizing the value in the range of\n        // (sleepSeconds / 2) to (sleepSeconds).\n        sleepSeconds *= 0.5 * (1 + Math.random());\n        // But never sleep less than the base sleep seconds.\n        sleepSeconds = Math.max(initialNetworkRetryDelay, sleepSeconds);\n        // And never sleep less than the time the API asks us to wait, assuming it's a reasonable ask.\n        if (Number.isInteger(retryAfter) && retryAfter <= MAX_RETRY_AFTER_WAIT) {\n            sleepSeconds = Math.max(sleepSeconds, retryAfter);\n        }\n        return sleepSeconds * 1000;\n    }\n    // Max retries can be set on a per request basis. Favor those over the global setting\n    _getMaxNetworkRetries(settings = {}) {\n        return settings.maxNetworkRetries !== undefined &&\n            Number.isInteger(settings.maxNetworkRetries)\n            ? settings.maxNetworkRetries\n            : this._stripe.getMaxNetworkRetries();\n    }\n    _defaultIdempotencyKey(method, settings, apiMode) {\n        // If this is a POST and we allow multiple retries, ensure an idempotency key.\n        const maxRetries = this._getMaxNetworkRetries(settings);\n        const genKey = () => `stripe-node-retry-${this._stripe._platformFunctions.uuid4()}`;\n        // more verbose than it needs to be, but gives clear separation between V1 and V2 behavior\n        if (apiMode === 'v2') {\n            if (method === 'POST' || method === 'DELETE') {\n                return genKey();\n            }\n        }\n        else if (apiMode === 'v1') {\n            if (method === 'POST' && maxRetries > 0) {\n                return genKey();\n            }\n        }\n        return null;\n    }\n    _makeHeaders({ contentType, contentLength, apiVersion, clientUserAgent, method, userSuppliedHeaders, userSuppliedSettings, stripeAccount, stripeContext, apiMode, }) {\n        const defaultHeaders = {\n            Accept: 'application/json',\n            'Content-Type': contentType,\n            'User-Agent': this._getUserAgentString(apiMode),\n            'X-Stripe-Client-User-Agent': clientUserAgent,\n            'X-Stripe-Client-Telemetry': this._getTelemetryHeader(),\n            'Stripe-Version': apiVersion,\n            'Stripe-Account': stripeAccount,\n            'Stripe-Context': stripeContext,\n            'Idempotency-Key': this._defaultIdempotencyKey(method, userSuppliedSettings, apiMode),\n        };\n        // As per https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2:\n        //   A user agent SHOULD send a Content-Length in a request message when\n        //   no Transfer-Encoding is sent and the request method defines a meaning\n        //   for an enclosed payload body.  For example, a Content-Length header\n        //   field is normally sent in a POST request even when the value is 0\n        //   (indicating an empty payload body).  A user agent SHOULD NOT send a\n        //   Content-Length header field when the request message does not contain\n        //   a payload body and the method semantics do not anticipate such a\n        //   body.\n        //\n        // These method types are expected to have bodies and so we should always\n        // include a Content-Length.\n        const methodHasPayload = method == 'POST' || method == 'PUT' || method == 'PATCH';\n        // If a content length was specified, we always include it regardless of\n        // whether the method semantics anticipate such a body. This keeps us\n        // consistent with historical behavior. We do however want to warn on this\n        // and fix these cases as they are semantically incorrect.\n        if (methodHasPayload || contentLength) {\n            if (!methodHasPayload) {\n                (0, utils_js_1.emitWarning)(`${method} method had non-zero contentLength but no payload is expected for this verb`);\n            }\n            defaultHeaders['Content-Length'] = contentLength;\n        }\n        return Object.assign((0, utils_js_1.removeNullish)(defaultHeaders), \n        // If the user supplied, say 'idempotency-key', override instead of appending by ensuring caps are the same.\n        (0, utils_js_1.normalizeHeaders)(userSuppliedHeaders));\n    }\n    _getUserAgentString(apiMode) {\n        const packageVersion = this._stripe.getConstant('PACKAGE_VERSION');\n        const appInfo = this._stripe._appInfo\n            ? this._stripe.getAppInfoAsString()\n            : '';\n        return `Stripe/${apiMode} NodeBindings/${packageVersion} ${appInfo}`.trim();\n    }\n    _getTelemetryHeader() {\n        if (this._stripe.getTelemetryEnabled() &&\n            this._stripe._prevRequestMetrics.length > 0) {\n            const metrics = this._stripe._prevRequestMetrics.shift();\n            return JSON.stringify({\n                last_request_metrics: metrics,\n            });\n        }\n    }\n    _recordRequestMetrics(requestId, requestDurationMs, usage) {\n        if (this._stripe.getTelemetryEnabled() && requestId) {\n            if (this._stripe._prevRequestMetrics.length > this._maxBufferedRequestMetric) {\n                (0, utils_js_1.emitWarning)('Request metrics buffer is full, dropping telemetry message.');\n            }\n            else {\n                const m = {\n                    request_id: requestId,\n                    request_duration_ms: requestDurationMs,\n                };\n                if (usage && usage.length > 0) {\n                    m.usage = usage;\n                }\n                this._stripe._prevRequestMetrics.push(m);\n            }\n        }\n    }\n    _rawRequest(method, path, params, options) {\n        const requestPromise = new Promise((resolve, reject) => {\n            let opts;\n            try {\n                const requestMethod = method.toUpperCase();\n                if (requestMethod !== 'POST' &&\n                    params &&\n                    Object.keys(params).length !== 0) {\n                    throw new Error('rawRequest only supports params on POST requests. Please pass null and add your parameters to path.');\n                }\n                const args = [].slice.call([params, options]);\n                // Pull request data and options (headers, auth) from args.\n                const dataFromArgs = (0, utils_js_1.getDataFromArgs)(args);\n                const data = Object.assign({}, dataFromArgs);\n                const calculatedOptions = (0, utils_js_1.getOptionsFromArgs)(args);\n                const headers = calculatedOptions.headers;\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const authenticator = calculatedOptions.authenticator;\n                opts = {\n                    requestMethod,\n                    requestPath: path,\n                    bodyData: data,\n                    queryData: {},\n                    authenticator,\n                    headers,\n                    host: null,\n                    streaming: false,\n                    settings: {},\n                    usage: ['raw_request'],\n                };\n            }\n            catch (err) {\n                reject(err);\n                return;\n            }\n            function requestCallback(err, response) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(response);\n                }\n            }\n            const { headers, settings } = opts;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const authenticator = opts.authenticator;\n            this._request(opts.requestMethod, opts.host, path, opts.bodyData, authenticator, { headers, settings, streaming: opts.streaming }, opts.usage, requestCallback);\n        });\n        return requestPromise;\n    }\n    _request(method, host, path, data, authenticator, options, usage = [], callback, requestDataProcessor = null) {\n        var _a;\n        let requestData;\n        authenticator = (_a = authenticator !== null && authenticator !== void 0 ? authenticator : this._stripe._authenticator) !== null && _a !== void 0 ? _a : null;\n        const apiMode = (0, utils_js_1.getAPIMode)(path);\n        const retryRequest = (requestFn, apiVersion, headers, requestRetries, retryAfter) => {\n            return setTimeout(requestFn, this._getSleepTimeInMS(requestRetries, retryAfter), apiVersion, headers, requestRetries + 1);\n        };\n        const makeRequest = (apiVersion, headers, numRetries) => {\n            // timeout can be set on a per-request basis. Favor that over the global setting\n            const timeout = options.settings &&\n                options.settings.timeout &&\n                Number.isInteger(options.settings.timeout) &&\n                options.settings.timeout >= 0\n                ? options.settings.timeout\n                : this._stripe.getApiField('timeout');\n            const request = {\n                host: host || this._stripe.getApiField('host'),\n                port: this._stripe.getApiField('port'),\n                path: path,\n                method: method,\n                headers: Object.assign({}, headers),\n                body: requestData,\n                protocol: this._stripe.getApiField('protocol'),\n            };\n            authenticator(request)\n                .then(() => {\n                const req = this._stripe\n                    .getApiField('httpClient')\n                    .makeRequest(request.host, request.port, request.path, request.method, request.headers, request.body, request.protocol, timeout);\n                const requestStartTime = Date.now();\n                // @ts-ignore\n                const requestEvent = (0, utils_js_1.removeNullish)({\n                    api_version: apiVersion,\n                    account: headers['Stripe-Account'],\n                    idempotency_key: headers['Idempotency-Key'],\n                    method,\n                    path,\n                    request_start_time: requestStartTime,\n                });\n                const requestRetries = numRetries || 0;\n                const maxRetries = this._getMaxNetworkRetries(options.settings || {});\n                this._stripe._emitter.emit('request', requestEvent);\n                req\n                    .then((res) => {\n                    if (RequestSender._shouldRetry(res, requestRetries, maxRetries)) {\n                        return retryRequest(makeRequest, apiVersion, headers, requestRetries, \n                        // @ts-ignore\n                        res.getHeaders()['retry-after']);\n                    }\n                    else if (options.streaming && res.getStatusCode() < 400) {\n                        return this._streamingResponseHandler(requestEvent, usage, callback)(res);\n                    }\n                    else {\n                        return this._jsonResponseHandler(requestEvent, apiMode, usage, callback)(res);\n                    }\n                })\n                    .catch((error) => {\n                    if (RequestSender._shouldRetry(null, requestRetries, maxRetries, error)) {\n                        return retryRequest(makeRequest, apiVersion, headers, requestRetries, null);\n                    }\n                    else {\n                        const isTimeoutError = error.code && error.code === HttpClient_js_1.HttpClient.TIMEOUT_ERROR_CODE;\n                        return callback(new Error_js_1.StripeConnectionError({\n                            message: isTimeoutError\n                                ? `Request aborted due to timeout being reached (${timeout}ms)`\n                                : RequestSender._generateConnectionErrorMessage(requestRetries),\n                            // @ts-ignore\n                            detail: error,\n                        }));\n                    }\n                });\n            })\n                .catch((e) => {\n                throw new Error_js_1.StripeError({\n                    message: 'Unable to authenticate the request',\n                    exception: e,\n                });\n            });\n        };\n        const prepareAndMakeRequest = (error, data) => {\n            if (error) {\n                return callback(error);\n            }\n            requestData = data;\n            this._stripe.getClientUserAgent((clientUserAgent) => {\n                const apiVersion = this._stripe.getApiField('version');\n                const headers = this._makeHeaders({\n                    contentType: apiMode == 'v2'\n                        ? 'application/json'\n                        : 'application/x-www-form-urlencoded',\n                    contentLength: requestData.length,\n                    apiVersion: apiVersion,\n                    clientUserAgent,\n                    method,\n                    userSuppliedHeaders: options.headers,\n                    userSuppliedSettings: options.settings,\n                    stripeAccount: apiMode == 'v2' ? null : this._stripe.getApiField('stripeAccount'),\n                    stripeContext: apiMode == 'v2' ? this._stripe.getApiField('stripeContext') : null,\n                    apiMode: apiMode,\n                });\n                makeRequest(apiVersion, headers, 0);\n            });\n        };\n        if (requestDataProcessor) {\n            requestDataProcessor(method, data, options.headers, prepareAndMakeRequest);\n        }\n        else {\n            let stringifiedData;\n            if (apiMode == 'v2') {\n                stringifiedData = data ? (0, utils_js_1.jsonStringifyRequestData)(data) : '';\n            }\n            else {\n                stringifiedData = (0, utils_js_1.queryStringifyRequestData)(data || {}, apiMode);\n            }\n            prepareAndMakeRequest(null, stringifiedData);\n        }\n    }\n}\nexports.RequestSender = RequestSender;\n"},"lineCount":458}},"error":null,"hash":"7f4540c858b6ca70f9304edd987126fe","cacheData":{"env":{}}}